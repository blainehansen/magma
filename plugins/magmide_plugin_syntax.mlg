(* https://project.inria.fr/coqexchange/a-small-tutorial-for-ocaml-plugins-to-extend-the-coq-system/ *)
(* http://gallium.inria.fr/blog/your-first-coq-plugin/ *)
(* https://github.com/coq/coq/tree/a59c356a45180dd56b1ec86c8725a257bffe71fa/doc/plugin_tutorial *)
(* https://coq.github.io/doc/master/api/coq-core/index.html *)

DECLARE PLUGIN "magmide_plugin"
{
open Pp
open Stdarg
open Magmide_rust_bindings
}

VERNAC COMMAND EXTEND Magmide CLASSIFIED AS SIDEFF
| #[ poly = Attributes.polymorphic ] [ "Magmide" string(filename) "as" ident(name) ] -> {
	magmide ~poly Rust.magmide filename name
} END

VERNAC COMMAND EXTEND MagmideNoEmit CLASSIFIED AS SIDEFF
| #[ poly = Attributes.polymorphic ] [ "MagmideNoEmit" string(filename) "as" ident(name) ] -> {
	magmide ~poly Rust.parse_file filename name
} END

VERNAC COMMAND EXTEND MagmideInspectExpr CLASSIFIED AS QUERY
| [ "MagmideInspectExpr" constr(expr) ] -> {
	Feedback.msg_debug (strbrk (Magmide_constrexpr.dbg_constrexpr expr))
} END
